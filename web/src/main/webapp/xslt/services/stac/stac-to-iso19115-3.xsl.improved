<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Convert a STAC Collection or Item to ISO19115-3 format
  
  This stylesheet transforms a STAC (SpatioTemporal Asset Catalog) Item or Collection to ISO19115-3 format.
  Collections are converted to series. Items are converted to datasets.
  The STAC JSON is first converted to XML using the SimpleURLHarvester's JSON to XML conversion.
  
  For collection endpoints (like https://stacapi-cdos.apps.okd.crocc.meso.umontpellier.fr/collections),
  each collection is processed and mapped to an ISO19115-3 series metadata record.
  
  Mapping details:
  - STAC collection ID → ISO metadataIdentifier
  - STAC title → ISO title
  - STAC description → ISO abstract
  - STAC extent (spatial and temporal) → ISO extent
  - STAC links → ISO onlineResource with protocol=STAC
  - STAC assets → ISO transferOptions
  - STAC contacts/providers → ISO contact information
  - STAC license → ISO constraints
  - STAC keywords → ISO keywords
  - STAC stac_extensions → ISO metadataProfile
  - STAC stac_version → ISO metadataStandard
  
  Authors: 
    - Based on JSON to ISO19115-3 conversion and STAC specification
    
  Date: June 2025
-->
<xsl:stylesheet version="2.0" 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:gmd="http://www.isotc211.org/2005/gmd"
    xmlns:gco="http://www.isotc211.org/2005/gco"
    xmlns:gfc="http://www.isotc211.org/2005/gfc"
    xmlns:gml="http://www.opengis.net/gml/3.2"
    xmlns:gmx="http://www.isotc211.org/2005/gmx"
    xmlns:mdb="http://standards.iso.org/iso/19115/-3/mdb/2.0"
    xmlns:mcc="http://standards.iso.org/iso/19115/-3/mcc/1.0"
    xmlns:mri="http://standards.iso.org/iso/19115/-3/mri/1.0"
    xmlns:cit="http://standards.iso.org/iso/19115/-3/cit/2.0"
    xmlns:mco="http://standards.iso.org/iso/19115/-3/mco/1.0"
    xmlns:gex="http://standards.iso.org/iso/19115/-3/gex/1.0"
    xmlns:dqm="http://standards.iso.org/iso/19157/-2/dqm/1.0"
    xmlns:lan="http://standards.iso.org/iso/19115/-3/lan/1.0"
    xmlns:mrd="http://standards.iso.org/iso/19115/-3/mrd/1.0"
    xmlns:srv="http://standards.iso.org/iso/19115/-3/srv/2.0"
    xmlns:mac="http://standards.iso.org/iso/19115/-3/mac/2.0"
    xmlns:mrl="http://standards.iso.org/iso/19115/-3/mrl/2.0"
    xmlns:mmi="http://standards.iso.org/iso/19115/-3/mmi/1.0"
    xmlns:gcx="http://standards.iso.org/iso/19115/-3/gcx/1.0"
    xmlns:gex11="http://www.isotc211.org/2005/gex"
    xmlns:mdq="http://standards.iso.org/iso/19157/-2/mdq/1.0"
    xmlns:cat="http://standards.iso.org/iso/19115/-3/cat/1.0"
    xmlns:mdt="http://standards.iso.org/iso/19115/-3/mdt/2.0"
    xmlns:mrc="http://standards.iso.org/iso/19115/-3/mrc/2.0"
    xmlns:mas="http://standards.iso.org/iso/19115/-3/mas/1.0"
    xmlns:geonet="http://www.fao.org/geonetwork"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:mrs="http://standards.iso.org/iso/19115/-3/mrs/1.0"
    exclude-result-prefixes="#all">

  <xsl:output method="xml" indent="yes"/>
  
  <!-- Param supplied by the harvester with the UUID to use for the metadata -->
  <xsl:param name="uuid" select="''"/>
  
  <!-- Root template to determine STAC type and apply appropriate templates -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="/stacCatalog">
        <!-- Process a STAC Catalog - this usually points to collections -->
        <xsl:message>STAC Catalog detected - processing collections if available</xsl:message>
        <xsl:apply-templates select="stacCatalog"/>
      </xsl:when>
      <xsl:when test="/stacCollections">
        <!-- Process a STAC Collections endpoint containing multiple collections -->
        <xsl:message>STAC Collections endpoint detected - processing all collections</xsl:message>
        <xsl:apply-templates select="stacCollections"/>
      </xsl:when>
      <xsl:when test="/stacCollection">
        <!-- Process a STAC Collection as series -->
        <xsl:apply-templates select="stacCollection"/>
      </xsl:when>
      <xsl:when test="/stacItem">
        <!-- Process a STAC Item as dataset -->
        <xsl:apply-templates select="stacItem"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Unknown STAC content type</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  
  <!-- Template for STAC Catalog - typically the root endpoint -->
  <xsl:template match="stacCatalog">
    <xsl:message>STAC Catalog root endpoint - extract collections URLs</xsl:message>
    <!-- A STAC catalog typically contains links to collections -->
    <!-- In a harvester context, we just output a message as the harvester should follow links -->
  </xsl:template>
  
  <!-- Template for STAC Collections - a list of multiple collections -->
  <xsl:template match="stacCollections">
    <xsl:message>Processing multiple STAC collections from collections endpoint</xsl:message>
    <xsl:for-each select="collections/*">
      <xsl:message>Processing collection in collections array: <xsl:value-of select="id"/></xsl:message>
      <xsl:call-template name="createCollectionMetadata"/>
    </xsl:for-each>
  </xsl:template>
  
  <!-- Template for individual collection inside a collections array -->
  <xsl:template match="stacCollections/collections/*">
    <xsl:message>Processing collection: <xsl:value-of select="id"/></xsl:message>
    <xsl:call-template name="createCollectionMetadata"/>
  </xsl:template>
  
  <!-- Template for STAC Collection - a single collection -->
  <xsl:template match="stacCollection">
    <xsl:message>Processing single STAC collection: <xsl:value-of select="id"/></xsl:message>
    <xsl:call-template name="createCollectionMetadata"/>
  </xsl:template>
  
  <!-- Named template for creating ISO metadata from a STAC collection -->
  <xsl:template name="createCollectionMetadata">
    <mdb:MD_Metadata>
      <!-- Metadata identifier using provided UUID or the STAC collection ID -->
      <mdb:metadataIdentifier>
        <mcc:MD_Identifier>
          <mcc:code>
            <gco:CharacterString>
              <xsl:choose>
                <xsl:when test="normalize-space($uuid) != ''">
                  <xsl:value-of select="$uuid"/>
                </xsl:when>
                <xsl:when test="normalize-space(id) != ''">
                  <xsl:value-of select="id"/>
                </xsl:when>
                <xsl:when test="normalize-space(uuid) != ''">
                  <xsl:value-of select="uuid"/>
                </xsl:when>
                <xsl:otherwise>
                  <!-- Generate a fixed identifier based on current time to ensure uniqueness -->
                  <xsl:value-of select="concat('stac-collection-', format-dateTime(current-dateTime(), '[Y][M][D][H][m][s]'))"/>
                </xsl:otherwise>
              </xsl:choose>
            </gco:CharacterString>
          </mcc:code>
          <mcc:codeSpace>
            <gco:CharacterString>urn:uuid</gco:CharacterString>
          </mcc:codeSpace>
        </mcc:MD_Identifier>
      </mdb:metadataIdentifier>
      
      <!-- Metadata default language - assuming French -->
      <mdb:defaultLocale>
        <lan:PT_Locale>
          <lan:language>
            <lan:LanguageCode codeList="http://www.loc.gov/standards/iso639-2/" codeListValue="fre"/>
          </lan:language>
          <lan:characterEncoding>
            <lan:MD_CharacterSetCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_CharacterSetCode" codeListValue="utf8"/>
          </lan:characterEncoding>
        </lan:PT_Locale>
      </mdb:defaultLocale>

      <!-- Add English as alternate language -->
      <mdb:otherLocale>
        <lan:PT_Locale id="EN">
          <lan:language>
            <lan:LanguageCode codeList="http://www.loc.gov/standards/iso639-2/" codeListValue="eng"/>
          </lan:language>
          <lan:characterEncoding>
            <lan:MD_CharacterSetCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_CharacterSetCode" codeListValue="utf8"/>
          </lan:characterEncoding>
        </lan:PT_Locale>
      </mdb:otherLocale>
      
      <!-- Metadata scope - series for collections -->
      <mdb:metadataScope>
        <mdb:MD_MetadataScope>
          <mdb:resourceScope>
            <mcc:MD_ScopeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_ScopeCode" codeListValue="series"/>
          </mdb:resourceScope>
          <mdb:name>
            <gco:CharacterString>Collection de données</gco:CharacterString>
          </mdb:name>
        </mdb:MD_MetadataScope>
      </mdb:metadataScope>
      
      <!-- Process contacts using the specialized template -->
      <xsl:if test="contacts">
        <xsl:call-template name="processStacContacts">
          <xsl:with-param name="providers" select="contacts"/>
        </xsl:call-template>
      </xsl:if>
      
      <!-- Also handle providers if contacts is not available -->
      <xsl:if test="providers and not(contacts)">
        <xsl:call-template name="processStacContacts">
          <xsl:with-param name="providers" select="providers"/>
        </xsl:call-template>
      </xsl:if>
              <cit:party>
                <cit:CI_Organisation>
                  <cit:name>
                    <gco:CharacterString><xsl:value-of select="name"/></gco:CharacterString>
                  </cit:name>
                  <xsl:if test="url or email or description">
                    <cit:contactInfo>
                      <cit:CI_Contact>
                        <xsl:if test="description">
                          <cit:contactInstructions>
                            <gco:CharacterString><xsl:value-of select="description"/></gco:CharacterString>
                          </cit:contactInstructions>
                        </xsl:if>
                        <xsl:if test="url">
                          <cit:onlineResource>
                            <cit:CI_OnlineResource>
                              <cit:linkage>
                                <gco:CharacterString><xsl:value-of select="url"/></gco:CharacterString>
                              </cit:linkage>
                            </cit:CI_OnlineResource>
                          </cit:onlineResource>
                        </xsl:if>
                      </cit:CI_Contact>
                    </cit:contactInfo>
                  </xsl:if>
                  <xsl:if test="roles">
                    <cit:individual>
                      <cit:CI_Individual>
                        <cit:positionName>
                          <gco:CharacterString><xsl:value-of select="string-join(roles, ', ')"/></gco:CharacterString>
                        </cit:positionName>
                      </cit:CI_Individual>
                    </cit:individual>
                  </xsl:if>
                </cit:CI_Organisation>
              </cit:party>
            </cit:CI_Responsibility>
          </mdb:contact>
        </xsl:for-each>
      </xsl:if>
      
      <!-- Date of metadata creation - current date -->
      <mdb:dateInfo>
        <cit:CI_Date>
          <cit:date>
            <gco:DateTime><xsl:value-of select="current-dateTime()"/></gco:DateTime>
          </cit:date>
          <cit:dateType>
            <cit:CI_DateTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_DateTypeCode" codeListValue="creation"/>
          </cit:dateType>
        </cit:CI_Date>
      </mdb:dateInfo>
      
      <!-- Add temporal extent dates as metadata dates if available -->
      <xsl:if test="extent/temporal/interval/*[1]">
        <mdb:dateInfo>
          <cit:CI_Date>
            <cit:date>
              <gco:DateTime><xsl:value-of select="extent/temporal/interval/*[1]/*[1]"/></gco:DateTime>
            </cit:date>
            <cit:dateType>
              <cit:CI_DateTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_DateTypeCode" codeListValue="publication"/>
            </cit:dateType>
          </cit:CI_Date>
        </mdb:dateInfo>
      </xsl:if>
      
      <!-- Add STAC version as metadata standard if available -->
      <xsl:if test="stac_version">
        <mdb:metadataStandard>
          <cit:CI_Citation>
            <cit:title>
              <gco:CharacterString>STAC</gco:CharacterString>
            </cit:title>
            <cit:edition>
              <gco:CharacterString><xsl:value-of select="stac_version"/></gco:CharacterString>
            </cit:edition>
          </cit:CI_Citation>
        </mdb:metadataStandard>
      </xsl:if>
      
      <!-- Metadata standards -->
      <mdb:metadataStandard>
        <cit:CI_Citation>
          <cit:title>
            <gco:CharacterString>ISO 19115-3</gco:CharacterString>
          </cit:title>
          <cit:edition>
            <gco:CharacterString>2018</gco:CharacterString>
          </cit:edition>
        </cit:CI_Citation>
      </mdb:metadataStandard>
      
      <!-- Process STAC extensions using the specialized template -->
      <xsl:call-template name="processStacExtensions">
        <xsl:with-param name="extensions" select="stac_extensions"/>
      </xsl:call-template>
      
      <!-- Reference system - WGS 84 is standard for STAC -->
      <mdb:referenceSystemInfo>
        <mrs:MD_ReferenceSystem>
          <mrs:referenceSystemIdentifier>
            <mcc:MD_Identifier>
              <mcc:code>
                <gcx:Anchor xlink:href="http://www.opengis.net/def/crs/EPSG/0/4326">WGS 84 (EPSG:4326)</gcx:Anchor>
              </mcc:code>
            </mcc:MD_Identifier>
          </mrs:referenceSystemIdentifier>
        </mrs:MD_ReferenceSystem>
      </mdb:referenceSystemInfo>
      
      <!-- Resource information -->
      <mdb:identificationInfo>
        <mri:MD_DataIdentification>
          <mri:citation>
            <cit:CI_Citation>
              <!-- Resource title -->
              <cit:title>
                <gco:CharacterString>
                  <xsl:choose>
                    <xsl:when test="normalize-space(title) != ''">
                      <xsl:value-of select="title"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="id"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </gco:CharacterString>
              </cit:title>
              
              <!-- Resource dates - use temporal extent start as publication date -->
              <xsl:if test="extent/temporal/interval/*[1]/*[1]">
                <cit:date>
                  <cit:CI_Date>
                    <cit:date>
                      <gco:DateTime><xsl:value-of select="extent/temporal/interval/*[1]/*[1]"/></gco:DateTime>
                    </cit:date>
                    <cit:dateType>
                      <cit:CI_DateTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_DateTypeCode" codeListValue="publication"/>
                    </cit:dateType>
                  </cit:CI_Date>
                </cit:date>
              </xsl:if>
              
              <!-- Resource dates - use temporal extent end as validity date -->
              <xsl:if test="extent/temporal/interval/*[1]/*[2]">
                <cit:date>
                  <cit:CI_Date>
                    <cit:date>
                      <gco:DateTime><xsl:value-of select="extent/temporal/interval/*[1]/*[2]"/></gco:DateTime>
                    </cit:date>
                    <cit:dateType>
                      <cit:CI_DateTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_DateTypeCode" codeListValue="validUntil"/>
                    </cit:dateType>
                  </cit:CI_Date>
                </cit:date>
              </xsl:if>
              
              <!-- Resource identifier -->
              <cit:identifier>
                <mcc:MD_Identifier>
                  <mcc:code>
                    <gco:CharacterString><xsl:value-of select="id"/></gco:CharacterString>
                  </mcc:code>
                </mcc:MD_Identifier>
              </cit:identifier>
              
              <!-- Series metadata -->
              <cit:series>
                <cit:CI_Series>
                  <cit:name>
                    <gco:CharacterString><xsl:value-of select="id"/></gco:CharacterString>
                  </cit:name>
                </cit:CI_Series>
              </cit:series>
            </cit:CI_Citation>
          </mri:citation>
          
          <!-- Abstract / Description -->
          <mri:abstract>
            <gco:CharacterString>
              <xsl:choose>
                <xsl:when test="normalize-space(description) != ''">
                  <xsl:value-of select="description"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="concat('STAC Collection: ', id)"/>
                </xsl:otherwise>
              </xsl:choose>
            </gco:CharacterString>
          </mri:abstract>
          
          <!-- Purpose - Use the collection type information -->
          <xsl:if test="type">
            <mri:purpose>
              <gco:CharacterString>
                <xsl:value-of select="concat('STAC Resource Type: ', type)"/>
              </gco:CharacterString>
            </mri:purpose>
          </xsl:if>
          
          <!-- Status - Default to "completed" for collections -->
          <mri:status>
            <mcc:MD_ProgressCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_ProgressCode" codeListValue="completed"/>
          </mri:status>
          
          <!-- Point of contact - using providers/contacts -->
          <xsl:if test="contacts">
            <xsl:for-each select="contacts/*">
              <mri:pointOfContact>
                <cit:CI_Responsibility>
                  <cit:role>
                    <cit:CI_RoleCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_RoleCode" codeListValue="custodian"/>
                  </cit:role>
                  <cit:party>
                    <cit:CI_Organisation>
                      <cit:name>
                        <gco:CharacterString><xsl:value-of select="name"/></gco:CharacterString>
                      </cit:name>
                      <xsl:if test="organization">
                        <cit:individual>
                          <cit:CI_Individual>
                            <cit:name>
                              <gco:CharacterString><xsl:value-of select="organization"/></gco:CharacterString>
                            </cit:name>
                          </cit:CI_Individual>
                        </cit:individual>
                      </xsl:if>
                    </cit:CI_Organisation>
                  </cit:party>
                </cit:CI_Responsibility>
              </mri:pointOfContact>
            </xsl:for-each>
          </xsl:if>
          
          <!-- Point of contact - using providers if contacts not available -->
          <xsl:if test="providers and not(contacts)">
            <xsl:for-each select="providers/*">
              <mri:pointOfContact>
                <cit:CI_Responsibility>
                  <cit:role>
                    <cit:CI_RoleCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_RoleCode" codeListValue="custodian"/>
                  </cit:role>
                  <cit:party>
                    <cit:CI_Organisation>
                      <cit:name>
                        <gco:CharacterString><xsl:value-of select="name"/></gco:CharacterString>
                      </cit:name>
                      <xsl:if test="roles">
                        <cit:individual>
                          <cit:CI_Individual>
                            <cit:positionName>
                              <gco:CharacterString><xsl:value-of select="string-join(roles, ', ')"/></gco:CharacterString>
                            </cit:positionName>
                          </cit:CI_Individual>
                        </cit:individual>
                      </xsl:if>
                    </cit:CI_Organisation>
                  </cit:party>
                </cit:CI_Responsibility>
              </mri:pointOfContact>
            </xsl:for-each>
          </xsl:if>
          
          <!-- Topic category - Default to "geoscientificInformation" for remote sensing data -->
          <mri:topicCategory>
            <mri:MD_TopicCategoryCode>geoscientificInformation</mri:MD_TopicCategoryCode>
          </mri:topicCategory>
          
          <!-- Keywords - from STAC keywords array -->
          <xsl:if test="keywords">
            <mri:descriptiveKeywords>
              <mri:MD_Keywords>
                <xsl:for-each select="keywords/*">
                  <mri:keyword>
                    <gco:CharacterString><xsl:value-of select="."/></gco:CharacterString>
                  </mri:keyword>
                </xsl:for-each>
                <mri:type>
                  <mri:MD_KeywordTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_KeywordTypeCode" codeListValue="theme"/>
                </mri:type>
              </mri:MD_Keywords>
            </mri:descriptiveKeywords>
          </xsl:if>
          
          <!-- Keywords - from STAC extensions -->
          <xsl:if test="stac_extensions">
            <mri:descriptiveKeywords>
              <mri:MD_Keywords>
                <xsl:for-each select="stac_extensions/*">
                  <mri:keyword>
                    <gco:CharacterString><xsl:value-of select="."/></gco:CharacterString>
                  </mri:keyword>
                </xsl:for-each>
                <mri:type>
                  <mri:MD_KeywordTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_KeywordTypeCode" codeListValue="theme"/>
                </mri:type>
                <mri:thesaurusName>
                  <cit:CI_Citation>
                    <cit:title>
                      <gco:CharacterString>STAC Extensions</gco:CharacterString>
                    </cit:title>
                  </cit:CI_Citation>
                </mri:thesaurusName>
              </mri:MD_Keywords>
            </mri:descriptiveKeywords>
          </xsl:if>
          
          <!-- License information -->
          <xsl:if test="license">
            <mri:resourceConstraints>
              <mco:MD_LegalConstraints>
                <mco:useConstraints>
                  <mco:MD_RestrictionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_RestrictionCode" codeListValue="license"/>
                </mco:useConstraints>
                <mco:reference>
                  <cit:CI_Citation>
                    <cit:title>
                      <gco:CharacterString><xsl:value-of select="license"/></gco:CharacterString>
                    </cit:title>
                  </cit:CI_Citation>
                </mco:reference>
              </mco:MD_LegalConstraints>
            </mri:resourceConstraints>
          </xsl:if>
          
          <!-- Spatial representation - Default to "grid" for STAC -->
          <mri:spatialRepresentationType>
            <mri:MD_SpatialRepresentationTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_SpatialRepresentationTypeCode" codeListValue="grid"/>
          </mri:spatialRepresentationType>
          
          <!-- Spatial Resolution - look for summaries/gsd -->
          <xsl:if test="summaries/gsd/*[1]">
            <mri:spatialResolution>
              <mri:MD_Resolution>
                <mri:equivalentScale>
                  <mri:MD_RepresentativeFraction>
                    <mri:denominator>
                      <gco:Integer><xsl:value-of select="summaries/gsd/*[1]"/></gco:Integer>
                    </mri:denominator>
                  </mri:MD_RepresentativeFraction>
                </mri:equivalentScale>
              </mri:MD_Resolution>
            </mri:spatialResolution>
          </xsl:if>
          
          <!-- Geographic and Temporal Extent using specialized templates -->
          <xsl:if test="extent">
            <mri:extent>
              <gex:EX_Extent>
                <!-- Process spatial extent -->
                <xsl:call-template name="processStacSpatialExtent">
                  <xsl:with-param name="extent" select="extent"/>
                </xsl:call-template>
                
                <!-- Process temporal extent -->
                <xsl:call-template name="processStacTemporalExtent">
                  <xsl:with-param name="extent" select="extent"/>
                </xsl:call-template>
              </gex:EX_Extent>
            </mri:extent>
          </xsl:if>
          
          <!-- Additional identification information - STAC specific -->
          <mri:additionalDocumentation>
            <cit:CI_Citation>
              <cit:title>
                <gco:CharacterString>STAC Collection Information</gco:CharacterString>
              </cit:title>
              <cit:otherCitationDetails>
                <gco:CharacterString>
                  <xsl:text>STAC Version: </xsl:text><xsl:value-of select="stac_version"/><xsl:text>&#xA;</xsl:text>
                  <xsl:text>STAC Type: </xsl:text><xsl:value-of select="type"/><xsl:text>&#xA;</xsl:text>
                  <xsl:if test="stac_extensions">
                    <xsl:text>STAC Extensions: </xsl:text>
                    <xsl:for-each select="stac_extensions/*">
                      <xsl:value-of select="."/>
                      <xsl:if test="position() != last()"><xsl:text>, </xsl:text></xsl:if>
                    </xsl:for-each>
                  </xsl:if>
                </gco:CharacterString>
              </cit:otherCitationDetails>
            </cit:CI_Citation>
          </mri:additionalDocumentation>
        </mri:MD_DataIdentification>
      </mdb:identificationInfo>
      
      <!-- Distribution information - links and assets -->
      <mdb:distributionInfo>
        <mrd:MD_Distribution>
          <!-- Format information -->
          <mrd:distributionFormat>
            <mrd:MD_Format>
              <mrd:formatSpecificationCitation>
                <cit:CI_Citation>
                  <cit:title>
                    <gco:CharacterString>GeoJSON</gco:CharacterString>
                  </cit:title>
                  <cit:edition>
                    <gco:CharacterString>STAC</gco:CharacterString>
                  </cit:edition>
                </cit:CI_Citation>
              </mrd:formatSpecificationCitation>
            </mrd:MD_Format>
          </mrd:distributionFormat>
          
          <!-- Process assets using the specialized template -->
          <xsl:call-template name="processStacAssets">
            <xsl:with-param name="assets" select="assets"/>
          </xsl:call-template>
          
          <!-- Process links using the specialized template -->
          <xsl:call-template name="processStacLinks">
            <xsl:with-param name="links" select="links"/>
            <xsl:with-param name="apiUrl" select="apiUrl"/>
          </xsl:call-template>
        </mrd:MD_Distribution>
      </mdb:distributionInfo>
                            </xsl:choose>
                          </xsl:attribute>
                        </cit:CI_OnLineFunctionCode>
                      </cit:function>
                    </cit:CI_OnlineResource>
                  </mrd:onLine>
                </mrd:MD_DigitalTransferOptions>
              </mrd:transferOptions>
            </xsl:for-each>
          </xsl:if>
          
          <!-- Links as online resources -->
          <xsl:if test="links">
            <xsl:for-each select="links/*">
              <mrd:transferOptions>
                <mrd:MD_DigitalTransferOptions>
                  <mrd:onLine>
                    <cit:CI_OnlineResource>
                      <cit:linkage>
                        <gco:CharacterString><xsl:value-of select="href"/></gco:CharacterString>
                      </cit:linkage>
                      <xsl:if test="title">
                        <cit:name>
                          <gco:CharacterString><xsl:value-of select="title"/></gco:CharacterString>
                        </cit:name>
                      </xsl:if>
                      <xsl:if test="type">
                        <cit:protocol>
                          <gco:CharacterString>
                            <xsl:choose>
                              <xsl:when test="rel = 'items' or rel = 'item' or rel = 'collection'">STAC</xsl:when>
                              <xsl:otherwise><xsl:value-of select="type"/></xsl:otherwise>
                            </xsl:choose>
                          </gco:CharacterString>
                        </cit:protocol>
                      </xsl:if>
                      <xsl:if test="rel or description">
                        <cit:description>
                          <gco:CharacterString>
                            <xsl:choose>
                              <xsl:when test="description"><xsl:value-of select="description"/></xsl:when>
                              <xsl:otherwise>STAC Link Relation: <xsl:value-of select="rel"/></xsl:otherwise>
                            </xsl:choose>
                          </gco:CharacterString>
                        </cit:description>
                      </xsl:if>
                      <cit:function>
                        <cit:CI_OnLineFunctionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_OnLineFunctionCode">
                          <xsl:attribute name="codeListValue">
                            <xsl:choose>
                              <xsl:when test="rel = 'license'">information</xsl:when>
                              <xsl:when test="rel = 'derived_from'">source</xsl:when>
                              <xsl:when test="rel = 'predecessor'">source</xsl:when>
                              <xsl:when test="rel = 'successor'">information</xsl:when>
                              <xsl:when test="rel = 'parent'">information</xsl:when>
                              <xsl:when test="rel = 'root'">information</xsl:when>
                              <xsl:when test="rel = 'items'">search</xsl:when>
                              <xsl:when test="rel = 'item'">download</xsl:when>
                              <xsl:when test="rel = 'collection'">information</xsl:when>
                              <xsl:when test="rel = 'alternate'">information</xsl:when>
                              <xsl:when test="rel = 'canonical'">information</xsl:when>
                              <xsl:when test="rel = 'describedby'">information</xsl:when>
                              <xsl:when test="type[contains(.,'json')]">information</xsl:when>
                              <xsl:when test="type[contains(.,'html')]">information</xsl:when>
                              <xsl:when test="type[contains(.,'xml')]">information</xsl:when>
                              <xsl:when test="type[contains(.,'image')]">browseGraphic</xsl:when>
                              <xsl:otherwise>information</xsl:otherwise>
                            </xsl:choose>
                          </xsl:attribute>
                        </cit:CI_OnLineFunctionCode>
                      </cit:function>
                    </cit:CI_OnlineResource>
                  </mrd:onLine>
                </mrd:MD_DigitalTransferOptions>
              </mrd:transferOptions>
            </xsl:for-each>
          </xsl:if>
          
          <!-- Add specific STAC link for original collection -->
          <mrd:transferOptions>
            <mrd:MD_DigitalTransferOptions>
              <mrd:onLine>
                <cit:CI_OnlineResource>
                  <cit:linkage>
                    <gco:CharacterString>
                      <xsl:for-each select="links/*[rel='self']">
                        <xsl:value-of select="href"/>
                      </xsl:for-each>
                    </gco:CharacterString>
                  </cit:linkage>
                  <cit:name>
                    <gco:CharacterString>STAC Collection</gco:CharacterString>
                  </cit:name>
                  <cit:protocol>
                    <gco:CharacterString>STAC</gco:CharacterString>
                  </cit:protocol>
                  <cit:description>
                    <gco:CharacterString>Original STAC Collection</gco:CharacterString>
                  </cit:description>
                  <cit:function>
                    <cit:CI_OnLineFunctionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_OnLineFunctionCode" codeListValue="information"/>
                  </cit:function>
                </cit:CI_OnlineResource>
              </mrd:onLine>
            </mrd:MD_DigitalTransferOptions>
          </mrd:transferOptions>
          
          <!-- Add link to STAC items -->
          <mrd:transferOptions>
            <mrd:MD_DigitalTransferOptions>
              <mrd:onLine>
                <cit:CI_OnlineResource>
                  <cit:linkage>
                    <gco:CharacterString>
                      <xsl:for-each select="links/*[rel='items']">
                        <xsl:value-of select="href"/>
                      </xsl:for-each>
                    </gco:CharacterString>
                  </cit:linkage>
                  <cit:name>
                    <gco:CharacterString>STAC Items</gco:CharacterString>
                  </cit:name>
                  <cit:protocol>
                    <gco:CharacterString>STAC</gco:CharacterString>
                  </cit:protocol>
                  <cit:description>
                    <gco:CharacterString>Access to STAC items in this collection</gco:CharacterString>
                  </cit:description>
                  <cit:function>
                    <cit:CI_OnLineFunctionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_OnLineFunctionCode" codeListValue="information"/>
                  </cit:function>
                </cit:CI_OnlineResource>
              </mrd:onLine>
            </mrd:MD_DigitalTransferOptions>
          </mrd:transferOptions>
        </mrd:MD_Distribution>
      </mdb:distributionInfo>
      
      <!-- Quality information -->
      <mdb:dataQualityInfo>
        <mdq:DQ_DataQuality>
          <mdq:scope>
            <mcc:MD_Scope>
              <mcc:level>
                <mcc:MD_ScopeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_ScopeCode" codeListValue="series"/>
              </mcc:level>
            </mcc:MD_Scope>
          </mdq:scope>
          <mdq:report>
            <mdq:DQ_DomainConsistency>
              <mdq:result>
                <mdq:DQ_ConformanceResult>
                  <mdq:specification>
                    <cit:CI_Citation>
                      <cit:title>
                        <gco:CharacterString>STAC Specification</gco:CharacterString>
                      </cit:title>
                      <cit:edition>
                        <gco:CharacterString><xsl:value-of select="stac_version"/></gco:CharacterString>
                      </cit:edition>
                    </cit:CI_Citation>
                  </mdq:specification>
                  <mdq:pass>
                    <gco:Boolean>true</gco:Boolean>
                  </mdq:pass>
                </mdq:DQ_ConformanceResult>
              </mdq:result>
            </mdq:DQ_DomainConsistency>
          </mdq:report>
        </mdq:DQ_DataQuality>
      </mdb:dataQualityInfo>
    </mdb:MD_Metadata>
  </xsl:template>
              
              <!-- Resource identifier -->
              <cit:identifier>
                <mcc:MD_Identifier>
                  <mcc:code>
                    <gco:CharacterString><xsl:value-of select="id"/></gco:CharacterString>
                  </mcc:code>
                </mcc:MD_Identifier>
              </cit:identifier>
            </cit:CI_Citation>
          </mri:citation>
          
          <!-- Abstract -->
          <mri:abstract>
            <gco:CharacterString>
              <xsl:choose>
                <xsl:when test="normalize-space(description) != ''">
                  <xsl:value-of select="description"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>Collection STAC : </xsl:text>
                  <xsl:value-of select="id"/>
                </xsl:otherwise>
              </xsl:choose>
            </gco:CharacterString>
          </mri:abstract>
          
          <!-- Credit -->
          <xsl:if test="contacts">
            <mri:credit>
              <gco:CharacterString>
                <xsl:for-each select="contacts/*">
                  <xsl:value-of select="name"/>
                  <xsl:if test="organization"> (<xsl:value-of select="organization"/>)</xsl:if>
                  <xsl:if test="position() != last()">, </xsl:if>
                </xsl:for-each>
              </gco:CharacterString>
            </mri:credit>
          </xsl:if>
          
          <!-- Point of contact -->
          <xsl:if test="contacts">
            <xsl:for-each select="contacts/*">
              <mri:pointOfContact>
                <cit:CI_Responsibility>
                  <cit:role>
                    <cit:CI_RoleCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_RoleCode" codeListValue="pointOfContact"/>
                  </cit:role>
                  <cit:party>
                    <cit:CI_Organisation>
                      <cit:name>
                        <gco:CharacterString><xsl:value-of select="name"/></gco:CharacterString>
                      </cit:name>
                      <xsl:if test="organization">
                        <cit:contactInfo>
                          <cit:CI_Contact>
                            <cit:address>
                              <cit:CI_Address>
                                <cit:electronicMailAddress>
                                  <gco:CharacterString><xsl:value-of select="organization"/></gco:CharacterString>
                                </cit:electronicMailAddress>
                              </cit:CI_Address>
                            </cit:address>
                          </cit:CI_Contact>
                        </cit:contactInfo>
                      </xsl:if>
                    </cit:CI_Organisation>
                  </cit:party>
                </cit:CI_Responsibility>
              </mri:pointOfContact>
            </xsl:for-each>
          </xsl:if>
          
          <!-- Also handle providers as pointOfContact if contacts is not available -->
          <xsl:if test="providers and not(contacts)">
            <xsl:for-each select="providers/*">
              <mri:pointOfContact>
                <cit:CI_Responsibility>
                  <cit:role>
                    <cit:CI_RoleCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_RoleCode" codeListValue="pointOfContact"/>
                  </cit:role>
                  <cit:party>
                    <cit:CI_Organisation>
                      <cit:name>
                        <gco:CharacterString><xsl:value-of select="name"/></gco:CharacterString>
                      </cit:name>
                      <xsl:if test="url">
                        <cit:contactInfo>
                          <cit:CI_Contact>
                            <cit:onlineResource>
                              <cit:CI_OnlineResource>
                                <cit:linkage>
                                  <gco:CharacterString><xsl:value-of select="url"/></gco:CharacterString>
                                </cit:linkage>
                              </cit:CI_OnlineResource>
                            </cit:onlineResource>
                          </cit:CI_Contact>
                        </cit:contactInfo>
                      </xsl:if>
                    </cit:CI_Organisation>
                  </cit:party>
                </cit:CI_Responsibility>
              </mri:pointOfContact>
            </xsl:for-each>
          </xsl:if>
          
          <!-- Keywords - use STAC extensions -->
          <xsl:if test="stac_extensions">
            <mri:descriptiveKeywords>
              <mri:MD_Keywords>
                <xsl:for-each select="stac_extensions/*">
                  <mri:keyword>
                    <gco:CharacterString>STAC-Extension:<xsl:value-of select="."/></gco:CharacterString>
                  </mri:keyword>
                </xsl:for-each>
                <mri:type>
                  <mri:MD_KeywordTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_KeywordTypeCode" codeListValue="theme"/>
                </mri:type>
              </mri:MD_Keywords>
            </mri:descriptiveKeywords>
          </xsl:if>
          
          <!-- Keywords from keywords field if available -->
          <xsl:if test="keywords">
            <mri:descriptiveKeywords>
              <mri:MD_Keywords>
                <xsl:for-each select="keywords/*">
                  <mri:keyword>
                    <gco:CharacterString><xsl:value-of select="."/></gco:CharacterString>
                  </mri:keyword>
                </xsl:for-each>
                <mri:type>
                  <mri:MD_KeywordTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_KeywordTypeCode" codeListValue="theme"/>
                </mri:type>
              </mri:MD_Keywords>
            </mri:descriptiveKeywords>
          </xsl:if>
          
          <!-- License constraints -->
          <xsl:if test="license">
            <mri:resourceConstraints>
              <mco:MD_LegalConstraints>
                <mco:reference>
                  <cit:CI_Citation>
                    <cit:title>
                      <gco:CharacterString><xsl:value-of select="license"/></gco:CharacterString>
                    </cit:title>
                  </cit:CI_Citation>
                </mco:reference>
                <mco:accessConstraints>
                  <mco:MD_RestrictionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_RestrictionCode" codeListValue="license"/>
                </mco:accessConstraints>
              </mco:MD_LegalConstraints>
            </mri:resourceConstraints>
          </xsl:if>
          
          <!-- Spatial representation type - typically raster for STAC -->
          <mri:spatialRepresentationType>
            <mcc:MD_SpatialRepresentationTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_SpatialRepresentationTypeCode" codeListValue="grid"/>
          </mri:spatialRepresentationType>
          
          <!-- Language -->
          <mri:defaultLocale>
            <lan:PT_Locale>
              <lan:language>
                <lan:LanguageCode codeList="http://www.loc.gov/standards/iso639-2/" codeListValue="fre"/>
              </lan:language>
              <lan:characterEncoding>
                <lan:MD_CharacterSetCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_CharacterSetCode" codeListValue="utf8"/>
              </lan:characterEncoding>
            </lan:PT_Locale>
          </mri:defaultLocale>
          
          <!-- Topic category -->
          <mri:topicCategory>
            <mri:MD_TopicCategoryCode>imageryBaseMapsEarthCover</mri:MD_TopicCategoryCode>
          </mri:topicCategory>
          
          <!-- Temporal extent -->
          <xsl:if test="extent/temporal/interval">
            <mri:extent>
              <gex:EX_Extent>
                <gex:temporalElement>
                  <gex:EX_TemporalExtent>
                    <gex:extent>
                      <gml:TimePeriod gml:id="{generate-id(extent/temporal/interval)}">
                        <gml:beginPosition>
                          <xsl:value-of select="extent/temporal/interval/*[1]/*[1]"/>
                        </gml:beginPosition>
                        <gml:endPosition>
                          <xsl:value-of select="extent/temporal/interval/*[1]/*[2]"/>
                        </gml:endPosition>
                      </gml:TimePeriod>
                    </gex:extent>
                  </gex:EX_TemporalExtent>
                </gex:temporalElement>
              </gex:EX_Extent>
            </mri:extent>
          </xsl:if>
          
          <!-- Spatial extent -->
          <xsl:if test="extent/spatial/bbox">
            <mri:extent>
              <gex:EX_Extent>
                <gex:geographicElement>
                  <gex:EX_GeographicBoundingBox>
                    <gex:westBoundLongitude>
                      <gco:Decimal><xsl:value-of select="extent/spatial/bbox/*[1]/*[1]"/></gco:Decimal>
                    </gex:westBoundLongitude>
                    <gex:eastBoundLongitude>
                      <gco:Decimal><xsl:value-of select="extent/spatial/bbox/*[1]/*[3]"/></gco:Decimal>
                    </gex:eastBoundLongitude>
                    <gex:southBoundLatitude>
                      <gco:Decimal><xsl:value-of select="extent/spatial/bbox/*[1]/*[2]"/></gco:Decimal>
                    </gex:southBoundLatitude>
                    <gex:northBoundLatitude>
                      <gco:Decimal><xsl:value-of select="extent/spatial/bbox/*[1]/*[4]"/></gco:Decimal>
                    </gex:northBoundLatitude>
                  </gex:EX_GeographicBoundingBox>
                </gex:geographicElement>
              </gex:EX_Extent>
            </mri:extent>
          </xsl:if>
        </mri:MD_DataIdentification>
      </mdb:identificationInfo>
      
      <!-- Distribution info - include STAC links and assets -->
      <mdb:distributionInfo>
        <mrd:MD_Distribution>
          <!-- Add asset links if available -->
          <xsl:if test="assets">
            <xsl:for-each select="assets/*">
              <mrd:transferOption>
                <mrd:MD_DigitalTransferOptions>
                  <mrd:onLine>
                    <cit:CI_OnlineResource>
                      <cit:linkage>
                        <gco:CharacterString><xsl:value-of select="href"/></gco:CharacterString>
                      </cit:linkage>
                      <xsl:if test="name() != ''">
                        <cit:name>
                          <gco:CharacterString><xsl:value-of select="name()"/></gco:CharacterString>
                        </cit:name>
                      </xsl:if>
                      <xsl:if test="description">
                        <cit:description>
                          <gco:CharacterString><xsl:value-of select="description"/></gco:CharacterString>
                        </cit:description>
                      </xsl:if>
                      <xsl:if test="type">
                        <cit:protocol>
                          <gco:CharacterString><xsl:value-of select="type"/></gco:CharacterString>
                        </cit:protocol>
                      </xsl:if>
                      <cit:function>
                        <cit:CI_OnLineFunctionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_OnLineFunctionCode" codeListValue="download"/>
                      </cit:function>
                    </cit:CI_OnlineResource>
                  </mrd:onLine>
                </mrd:MD_DigitalTransferOptions>
              </mrd:transferOption>
            </xsl:for-each>
          </xsl:if>

          <!-- Add important links - self, collection, etc. -->
          <xsl:if test="links">
            <xsl:for-each select="links/*">
              <mrd:transferOption>
                <mrd:MD_DigitalTransferOptions>
                  <mrd:onLine>
                    <cit:CI_OnlineResource>
                      <cit:linkage>
                        <gco:CharacterString><xsl:value-of select="href"/></gco:CharacterString>
                      </cit:linkage>
                      <!-- Add specific protocol for STAC item/collection link -->
                      <xsl:choose>
                        <xsl:when test="rel = 'self'">
                          <cit:protocol>
                            <gco:CharacterString>STAC-item</gco:CharacterString>
                          </cit:protocol>
                          <cit:name>
                            <gco:CharacterString>Item STAC : <xsl:value-of select="../id"/></gco:CharacterString>
                          </cit:name>
                          <cit:description>
                            <gco:CharacterString>Item STAC</gco:CharacterString>
                          </cit:description>
                        </xsl:when>
                        <xsl:when test="rel = 'collection'">
                          <cit:protocol>
                            <gco:CharacterString>STAC</gco:CharacterString>
                          </cit:protocol>
                          <cit:name>
                            <gco:CharacterString>Collection STAC parente</gco:CharacterString>
                          </cit:name>
                          <cit:description>
                            <gco:CharacterString>Collection STAC d'appartenance</gco:CharacterString>
                          </cit:description>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:if test="title">
                            <cit:name>
                              <gco:CharacterString><xsl:value-of select="title"/></gco:CharacterString>
                            </cit:name>
                          </xsl:if>
                          <cit:description>
                            <gco:CharacterString>STAC rel: <xsl:value-of select="rel"/></gco:CharacterString>
                          </cit:description>
                          <xsl:if test="type">
                            <cit:protocol>
                              <gco:CharacterString><xsl:value-of select="type"/></gco:CharacterString>
                            </cit:protocol>
                          </xsl:if>
                        </xsl:otherwise>
                      </xsl:choose>
                      <cit:function>
                        <cit:CI_OnLineFunctionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_OnLineFunctionCode" codeListValue="information"/>
                      </cit:function>
                    </cit:CI_OnlineResource>
                  </mrd:onLine>
                </mrd:MD_DigitalTransferOptions>
              </mrd:transferOption>
            </xsl:for-each>
          </xsl:if>
          
          <!-- Always add a dedicated STAC protocol link regardless of other links -->
          <mrd:transferOption>
            <mrd:MD_DigitalTransferOptions>
              <mrd:onLine>
                <cit:CI_OnlineResource>
                  <cit:linkage>
                    <gco:CharacterString>
                      <xsl:choose>
                        <xsl:when test="links/*[rel = 'self']/href">
                          <xsl:value-of select="links/*[rel = 'self']/href"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:text>https://stacapi-cdos.apps.okd.crocc.meso.umontpellier.fr/collections/</xsl:text><xsl:value-of select="id"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </gco:CharacterString>
                  </cit:linkage>
                  <cit:protocol>
                    <gco:CharacterString>STAC</gco:CharacterString>
                  </cit:protocol>
                  <cit:name>
                    <gco:CharacterString>Collection STAC : <xsl:value-of select="id"/></gco:CharacterString>
                  </cit:name>
                  <cit:description>
                    <gco:CharacterString>Collection STAC</gco:CharacterString>
                  </cit:description>
                  <cit:function>
                    <cit:CI_OnLineFunctionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_OnLineFunctionCode" codeListValue="information"/>
                  </cit:function>
                </cit:CI_OnlineResource>
              </mrd:onLine>
            </mrd:MD_DigitalTransferOptions>
          </mrd:transferOption>
        </mrd:MD_Distribution>
      </mdb:distributionInfo>
      
      <!-- Data quality - basic conformance statement -->
      <mdb:dataQualityInfo>
        <mdq:DQ_DataQuality>
          <mdq:scope>
            <mdq:DQ_Scope>
              <mdq:level>
                <mcc:MD_ScopeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_ScopeCode" codeListValue="series"/>
              </mdq:level>
            </mdq:DQ_Scope>
          </mdq:scope>
          <mdq:report>
            <mdq:DQ_DomainConsistency>
              <mdq:result>
                <mdq:DQ_ConformanceResult>
                  <mdq:specification>
                    <cit:CI_Citation>
                      <cit:title>
                        <gco:CharacterString>STAC Specification</gco:CharacterString>
                      </cit:title>
                      <cit:date>
                        <cit:CI_Date>
                          <cit:date>
                            <gco:Date>2023-01-01</gco:Date>
                          </cit:date>
                          <cit:dateType>
                            <cit:CI_DateTypeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_DateTypeCode" codeListValue="publication"/>
                          </cit:dateType>
                        </cit:CI_Date>
                      </cit:date>
                    </cit:CI_Citation>
                  </mdq:specification>
                  <mdq:explanation>
                    <gco:CharacterString>Conforme à la spécification STAC</gco:CharacterString>
                  </mdq:explanation>
                  <mdq:pass>
                    <gco:Boolean>true</gco:Boolean>
                  </mdq:pass>
                </mdq:DQ_ConformanceResult>
              </mdq:result>
            </mdq:DQ_DomainConsistency>
          </mdq:report>
        </mdq:DQ_DataQuality>
      </mdb:dataQualityInfo>
      
      <!-- Additional metadata for provenance - use collection link if available -->
      <xsl:if test="links">
        <mdb:resourceLineage>
          <mrl:LI_Lineage>
            <mrl:source>
              <mrl:LI_Source>
                <mrl:sourceCitation>
                  <cit:CI_Citation>
                    <cit:title>
                      <gco:CharacterString>STAC Collection</gco:CharacterString>
                    </cit:title>
                    <xsl:for-each select="links/*[rel='collection']">
                      <cit:onlineResource>
                        <cit:CI_OnlineResource>
                          <cit:linkage>
                            <gco:CharacterString><xsl:value-of select="href"/></gco:CharacterString>
                          </cit:linkage>
                          <xsl:if test="title">
                            <cit:name>
                              <gco:CharacterString><xsl:value-of select="title"/></gco:CharacterString>
                            </cit:name>
                          </xsl:if>
                          <cit:function>
                            <cit:CI_OnLineFunctionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_OnLineFunctionCode" codeListValue="information"/>
                          </cit:function>
                        </cit:CI_OnlineResource>
                      </cit:onlineResource>
                    </xsl:for-each>
                  </cit:CI_Citation>
                </mrl:sourceCitation>
              </mrl:LI_Source>
            </mrl:source>
          </mrl:LI_Lineage>
        </mdb:resourceLineage>
      </xsl:if>
    </mdb:MD_Metadata>
  </xsl:template>
  
  <!-- ======================= STAC SPECIALIZED TEMPLATES =======================
  The following templates provide detailed mapping for complex STAC elements
-->
  
  <!-- 
    Process STAC assets into ISO transfer options
    STAC assets are detailed in https://github.com/radiantearth/stac-spec/blob/master/item-spec/item-spec.md#asset-object
    
    Assets can have:
    - href: URL to the asset (required)
    - title: Asset title
    - description: Asset description
    - type: Media type of the asset
    - roles: Array of roles, e.g. ["thumbnail", "data", "metadata"]
    - Plus extension specific fields
  -->
  <xsl:template name="processStacAssets">
    <xsl:param name="assets"/>
    
    <xsl:if test="$assets">
      <mrd:transferOptions>
        <mrd:MD_DigitalTransferOptions>
          <xsl:for-each select="$assets/*">
            <xsl:variable name="assetName" select="name()"/>
            <mrd:onLine>
              <cit:CI_OnlineResource>
                <!-- URL from href property -->
                <cit:linkage>
                  <gco:CharacterString>
                    <xsl:value-of select="href"/>
                  </gco:CharacterString>
                </cit:linkage>
                
                <!-- Asset name as protocol -->
                <cit:protocol>
                  <gco:CharacterString>STAC-ASSET:<xsl:value-of select="$assetName"/></gco:CharacterString>
                </cit:protocol>
                
                <!-- Asset title if available -->
                <xsl:if test="title">
                  <cit:name>
                    <gco:CharacterString><xsl:value-of select="title"/></gco:CharacterString>
                  </cit:name>
                </xsl:if>
                
                <!-- Asset description if available -->
                <xsl:if test="description">
                  <cit:description>
                    <gco:CharacterString><xsl:value-of select="description"/></gco:CharacterString>
                  </cit:description>
                </xsl:if>
                
                <!-- Media type if available -->
                <xsl:if test="type">
                  <cit:applicationProfile>
                    <gco:CharacterString><xsl:value-of select="type"/></gco:CharacterString>
                  </cit:applicationProfile>
                </xsl:if>
                
                <!-- Asset function based on roles -->
                <xsl:if test="roles">
                  <cit:function>
                    <cit:CI_OnLineFunctionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_OnLineFunctionCode" 
                                              codeListValue="download">
                      <xsl:choose>
                        <xsl:when test="roles/*[text()='thumbnail']">
                          <xsl:attribute name="codeListValue">information</xsl:attribute>
                          thumbnail
                        </xsl:when>
                        <xsl:when test="roles/*[text()='overview']">
                          <xsl:attribute name="codeListValue">information</xsl:attribute>
                          overview
                        </xsl:when>
                        <xsl:when test="roles/*[text()='data']">
                          <xsl:attribute name="codeListValue">download</xsl:attribute>
                          data
                        </xsl:when>
                        <xsl:when test="roles/*[text()='metadata']">
                          <xsl:attribute name="codeListValue">information</xsl:attribute>
                          metadata
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:attribute name="codeListValue">download</xsl:attribute>
                          <xsl:value-of select="roles/*[1]"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </cit:CI_OnLineFunctionCode>
                  </cit:function>
                </xsl:if>
                
                <!-- Additional metadata about the asset -->
                <xsl:if test="created or datetime or eo:bands">
                  <cit:applicationProfile>
                    <gco:CharacterString>
                      <xsl:text>STAC-metadata:</xsl:text>
                      <xsl:if test="created">created=<xsl:value-of select="created"/>;</xsl:if>
                      <xsl:if test="datetime">datetime=<xsl:value-of select="datetime"/>;</xsl:if>
                      <xsl:if test="eo:bands">bands=<xsl:value-of select="count(eo:bands/*)"/>;</xsl:if>
                    </gco:CharacterString>
                  </cit:applicationProfile>
                </xsl:if>
              </cit:CI_OnlineResource>
            </mrd:onLine>
          </xsl:for-each>
        </mrd:MD_DigitalTransferOptions>
      </mrd:transferOptions>
    </xsl:if>
  </xsl:template>

  <!-- 
    Process STAC links into ISO online resources
    STAC links are detailed in https://github.com/radiantearth/stac-spec/blob/master/item-spec/item-spec.md#link-object
    
    Links can have:
    - href: URL (required)
    - rel: Relation type (required)
    - type: Media type
    - title: Link title
    - Plus extension specific fields
  -->
  <xsl:template name="processStacLinks">
    <xsl:param name="links"/>
    <xsl:param name="apiUrl" select="''"/>
    
    <xsl:if test="$links">
      <mrd:transferOptions>
        <mrd:MD_DigitalTransferOptions>
          <xsl:for-each select="$links/*">
            <mrd:onLine>
              <cit:CI_OnlineResource>
                <!-- URL -->
                <cit:linkage>
                  <gco:CharacterString>
                    <xsl:choose>
                      <xsl:when test="starts-with(href, 'http')">
                        <xsl:value-of select="href"/>
                      </xsl:when>
                      <xsl:when test="$apiUrl != '' and starts-with(href, '/')">
                        <xsl:value-of select="concat($apiUrl, href)"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="href"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </gco:CharacterString>
                </cit:linkage>
                
                <!-- Protocol as STAC-LINK with the rel value -->
                <cit:protocol>
                  <gco:CharacterString>STAC-LINK:<xsl:value-of select="rel"/></gco:CharacterString>
                </cit:protocol>
                
                <!-- Link title if available -->
                <xsl:if test="title">
                  <cit:name>
                    <gco:CharacterString><xsl:value-of select="title"/></gco:CharacterString>
                  </cit:name>
                </xsl:if>
                
                <!-- Media type if available -->
                <xsl:if test="type">
                  <cit:applicationProfile>
                    <gco:CharacterString><xsl:value-of select="type"/></gco:CharacterString>
                  </cit:applicationProfile>
                </xsl:if>
                
                <!-- Function based on rel -->
                <cit:function>
                  <cit:CI_OnLineFunctionCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_OnLineFunctionCode" 
                                            codeListValue="download">
                    <xsl:choose>
                      <xsl:when test="rel = 'self'">
                        <xsl:attribute name="codeListValue">information</xsl:attribute>
                        self
                      </xsl:when>
                      <xsl:when test="rel = 'root'">
                        <xsl:attribute name="codeListValue">information</xsl:attribute>
                        root
                      </xsl:when>
                      <xsl:when test="rel = 'parent'">
                        <xsl:attribute name="codeListValue">information</xsl:attribute>
                        parent
                      </xsl:when>
                      <xsl:when test="rel = 'child' or rel = 'item'">
                        <xsl:attribute name="codeListValue">information</xsl:attribute>
                        <xsl:value-of select="rel"/>
                      </xsl:when>
                      <xsl:when test="rel = 'collection'">
                        <xsl:attribute name="codeListValue">information</xsl:attribute>
                        collection
                      </xsl:when>
                      <xsl:when test="rel = 'license'">
                        <xsl:attribute name="codeListValue">information</xsl:attribute>
                        license
                      </xsl:when>
                      <xsl:when test="rel = 'preview'">
                        <xsl:attribute name="codeListValue">information</xsl:attribute>
                        preview
                      </xsl:when>
                      <xsl:when test="rel = 'derived_from'">
                        <xsl:attribute name="codeListValue">source</xsl:attribute>
                        derived_from
                      </xsl:when>
                      <xsl:when test="rel = 'alternate'">
                        <xsl:attribute name="codeListValue">information</xsl:attribute>
                        alternate
                      </xsl:when>
                      <xsl:when test="rel = 'data'">
                        <xsl:attribute name="codeListValue">download</xsl:attribute>
                        data
                      </xsl:when>
                      <xsl:when test="rel = 'via'">
                        <xsl:attribute name="codeListValue">source</xsl:attribute>
                        via
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:attribute name="codeListValue">information</xsl:attribute>
                        <xsl:value-of select="rel"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </cit:CI_OnLineFunctionCode>
                </cit:function>
              </cit:CI_OnlineResource>
            </mrd:onLine>
          </xsl:for-each>
        </mrd:MD_DigitalTransferOptions>
      </mrd:transferOptions>
    </xsl:if>
  </xsl:template>

  <!-- 
    Process STAC contacts/providers into ISO responsible parties
    STAC providers are detailed in https://github.com/radiantearth/stac-spec/blob/master/collection-spec/collection-spec.md#provider-object
    
    Providers can have:
    - name: Provider name (required)
    - description: Provider description
    - roles: Array of roles (producer, licensor, processor, host)
    - url: URL to provider website
    - Plus extension specific fields
  -->
  <xsl:template name="processStacContacts">
    <xsl:param name="providers"/>
    
    <xsl:if test="$providers">
      <xsl:for-each select="$providers/*">
        <mdb:contact>
          <cit:CI_Responsibility>
            <!-- Role based on STAC provider roles -->
            <cit:role>
              <cit:CI_RoleCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#CI_RoleCode" 
                              codeListValue="custodian">
                <xsl:choose>
                  <xsl:when test="roles/*[text()='producer']">
                    <xsl:attribute name="codeListValue">producer</xsl:attribute>
                    producer
                  </xsl:when>
                  <xsl:when test="roles/*[text()='licensor']">
                    <xsl:attribute name="codeListValue">rightsHolder</xsl:attribute>
                    licensor
                  </xsl:when>
                  <xsl:when test="roles/*[text()='processor']">
                    <xsl:attribute name="codeListValue">processor</xsl:attribute>
                    processor
                  </xsl:when>
                  <xsl:when test="roles/*[text()='host']">
                    <xsl:attribute name="codeListValue">custodian</xsl:attribute>
                    host
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:attribute name="codeListValue">custodian</xsl:attribute>
                    custodian
                  </xsl:otherwise>
                </xsl:choose>
              </cit:CI_RoleCode>
            </cit:role>
            
            <cit:party>
              <cit:CI_Organisation>
                <!-- Provider name -->
                <cit:name>
                  <gco:CharacterString><xsl:value-of select="name"/></gco:CharacterString>
                </cit:name>
                
                <!-- Provider description if available -->
                <xsl:if test="description">
                  <cit:description>
                    <gco:CharacterString><xsl:value-of select="description"/></gco:CharacterString>
                  </cit:description>
                </xsl:if>
                
                <!-- Contact information if URL is available -->
                <xsl:if test="url">
                  <cit:contactInfo>
                    <cit:CI_Contact>
                      <cit:onlineResource>
                        <cit:CI_OnlineResource>
                          <cit:linkage>
                            <gco:CharacterString><xsl:value-of select="url"/></gco:CharacterString>
                          </cit:linkage>
                        </cit:CI_OnlineResource>
                      </cit:onlineResource>
                    </cit:CI_Contact>
                  </cit:contactInfo>
                </xsl:if>
                
                <!-- Email if available -->
                <xsl:if test="email">
                  <cit:contactInfo>
                    <cit:CI_Contact>
                      <cit:address>
                        <cit:CI_Address>
                          <cit:electronicMailAddress>
                            <gco:CharacterString><xsl:value-of select="email"/></gco:CharacterString>
                          </cit:electronicMailAddress>
                        </cit:CI_Address>
                      </cit:address>
                    </cit:CI_Contact>
                  </cit:contactInfo>
                </xsl:if>
              </cit:CI_Organisation>
            </cit:party>
          </cit:CI_Responsibility>
        </mdb:contact>
      </xsl:for-each>
    </xsl:if>
  </xsl:template>

  <!-- 
    Process STAC extensions into ISO metadata profiles
    This converts stac_extensions array to ISO metadata profiles
  -->
  <xsl:template name="processStacExtensions">
    <xsl:param name="extensions"/>
    
    <xsl:if test="$extensions">
      <xsl:for-each select="$extensions/*">
        <mdb:metadataProfile>
          <gco:CharacterString>STAC-EXT:<xsl:value-of select="."/></gco:CharacterString>
        </mdb:metadataProfile>
      </xsl:for-each>
    </xsl:if>
  </xsl:template>

  <!-- 
    Process STAC spatial extent into ISO geographic element
    Handles both bbox and geometry properties
  -->
  <xsl:template name="processStacSpatialExtent">
    <xsl:param name="extent"/>
    
    <xsl:if test="$extent">
      <gex:geographicElement>
        <gex:EX_GeographicBoundingBox>
          <xsl:choose>
            <!-- If we have a structured bbox array -->
            <xsl:when test="$extent/spatial/bbox/*[1]">
              <gex:westBoundLongitude>
                <gco:Decimal><xsl:value-of select="$extent/spatial/bbox/*[1]/*[1]"/></gco:Decimal>
              </gex:westBoundLongitude>
              <gex:southBoundLatitude>
                <gco:Decimal><xsl:value-of select="$extent/spatial/bbox/*[1]/*[2]"/></gco:Decimal>
              </gex:southBoundLatitude>
              <gex:eastBoundLongitude>
                <gco:Decimal><xsl:value-of select="$extent/spatial/bbox/*[1]/*[3]"/></gco:Decimal>
              </gex:eastBoundLongitude>
              <gex:northBoundLatitude>
                <gco:Decimal><xsl:value-of select="$extent/spatial/bbox/*[1]/*[4]"/></gco:Decimal>
              </gex:northBoundLatitude>
            </xsl:when>
            <!-- Fallback to simple values if structure is different -->
            <xsl:otherwise>
              <gex:westBoundLongitude>
                <gco:Decimal><xsl:value-of select="$extent/spatial/bbox"/></gco:Decimal>
              </gex:westBoundLongitude>
              <gex:southBoundLatitude>
                <gco:Decimal>0</gco:Decimal>
              </gex:southBoundLatitude>
              <gex:eastBoundLongitude>
                <gco:Decimal>0</gco:Decimal>
              </gex:eastBoundLongitude>
              <gex:northBoundLatitude>
                <gco:Decimal>0</gco:Decimal>
              </gex:northBoundLatitude>
            </xsl:otherwise>
          </xsl:choose>
        </gex:EX_GeographicBoundingBox>
      </gex:geographicElement>
    </xsl:if>
  </xsl:template>

  <!-- 
    Process STAC temporal extent into ISO temporal element
    Handles the interval array in temporal extent
  -->
  <xsl:template name="processStacTemporalExtent">
    <xsl:param name="extent"/>
    
    <xsl:if test="$extent">
      <xsl:if test="$extent/temporal/interval/*[1]">
        <gex:temporalElement>
          <gex:EX_TemporalExtent>
            <gex:extent>
              <gml:TimePeriod gml:id="{generate-id()}">
                <!-- Start time -->
                <xsl:choose>
                  <xsl:when test="$extent/temporal/interval/*[1]/*[1] and $extent/temporal/interval/*[1]/*[1] != 'null'">
                    <gml:beginPosition>
                      <xsl:value-of select="$extent/temporal/interval/*[1]/*[1]"/>
                    </gml:beginPosition>
                  </xsl:when>
                  <xsl:otherwise>
                    <gml:beginPosition indeterminatePosition="unknown"/>
                  </xsl:otherwise>
                </xsl:choose>
                
                <!-- End time -->
                <xsl:choose>
                  <xsl:when test="$extent/temporal/interval/*[1]/*[2] and $extent/temporal/interval/*[1]/*[2] != 'null'">
                    <gml:endPosition>
                      <xsl:value-of select="$extent/temporal/interval/*[1]/*[2]"/>
                    </gml:endPosition>
                  </xsl:when>
                  <xsl:otherwise>
                    <gml:endPosition indeterminatePosition="unknown"/>
                  </xsl:otherwise>
                </xsl:choose>
              </gml:TimePeriod>
            </gex:extent>
          </gex:EX_TemporalExtent>
        </gex:temporalElement>
      </xsl:if>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
